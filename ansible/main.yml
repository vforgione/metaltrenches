---

- hosts: all
  
  sudo: yes

  pre_tasks:
    - name: make sure that vagrant has the right permissions
      lineinfile: 'dest=/etc/sudoers regexp="vagrant ALL=(ALL) NOPASSWD: ALL" line="vagrant ALL=(ALL) NOPASSWD: ALL"'

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart uwsgi
      service: name=uwsgi-emperor state=restarted

  roles:
    # easy stuff
    - python3
    - postgresql
    - nginx
    - avahi
    - memcached

    # configured roles
    - { role: uwsgi-emperor,
        uwsgi_install_method: source
    }

    - { role: python3-uwsgi-python-app,
        app_name: "metaltrenches",
        system_packages: [
          "git-core",
          "postgresql-server-dev-9.3",
          "python-psycopg2",
          "libmemcached-dev"
        ],
        uwsgi: [
            ["plugins-dir", "/etc/uwsgi-emperor/plugins"],
            ["plugins", "python3"],
            ["module", "metaltrenches.wsgi:application"],
            ["socket", "127.0.0.1:9000"],
            ["workers", "1"],
            ["buffer-size", "16384"],
        ],
        env_vars: [
            "DJANGO_SETTINGS_MODULE=metaltrenches.settings.local",
            "PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
        ],
        app_enabled: True,
    }

    - {
        role: elasticsearch,
        elasticsearch_version: "1.0.3"
    }


  post_tasks:
    # apt install
    - apt: name=python-psycopg2 state=present

    - apt: name=nodejs state=present

    - apt: name=npm state=present

    # files
    - authorized_key: user=www-data key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - file: path=/etc/uwsgi-emperor/vassals/metaltrenches.ini owner=www-data group=www-data state=touch

    - copy: dest=/var/www/.profile content="export DJANGO_SETTINGS_MODULE=metaltrenches.settings.local; cd /www/metaltrenches; source /var/venvs/metaltrenches/bin/activate"

    # nginx configs
    - copy: src=files/metaltrenches.local.conf dest=/etc/nginx/conf.d/metaltrenches.local.conf
      notify: restart nginx

    # psql
    - postgresql_user: name=metaltrenches password=somuchmetal role_attr_flags=SUPERUSER
      sudo_user: postgres

    - postgresql_db: name=metaltrenches state=present owner=metaltrenches
      sudo_user: postgres
      register: db_created

    # django reqs/sync/migrate
    - shell: "cd /www/metaltrenches && source /var/venvs/metaltrenches/bin/activate && pip install -r requirements.txt --upgrade executable=/bin/bash"

    - shell: "cd /www/metaltrenches && source /var/venvs/metaltrenches/bin/activate && python manage.py migrate --noinput --settings=metaltrenches.settings.local executable=/bin/bash"

    # npm/bower
    - shell: "cd /www/metaltrenches && npm install"

    # restart services
    - shell: "echo 'restarting nginx'"
      notify: restart nginx

    - shell: "echo 'restarting uwsgi-emperor'"
      notify: restart uwsgi
